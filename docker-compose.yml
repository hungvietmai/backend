name: fashion-store-backend

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
      POSTGRES_DB: appdb
    ports: ["5432:5432"]
    volumes: ["pg_data:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  migrate:
    build: .
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql+psycopg://appuser:apppass@db:5432/appdb"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command:
      - sh
      - -lc
      - |
        set -e
        python - <<'PY'
        import os, time
        from sqlalchemy import create_engine, text
        dsn = os.environ["SQLALCHEMY_DATABASE_URI"]
        eng = create_engine(dsn, pool_pre_ping=True)
        for _ in range(60):
            try:
                with eng.connect() as c:
                    c.execute(text("SELECT 1"))
                break
            except Exception:
                time.sleep(1)
        else:
            raise SystemExit("DB not ready after 60s")
        PY
        alembic upgrade head
    restart: "no"

  api:
    build: .
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql+psycopg://appuser:apppass@db:5432/appdb"
    ports: ["8000:8000"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    volumes:
      - .:/app
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped

volumes:
  pg_data:
  pgadmin_data: