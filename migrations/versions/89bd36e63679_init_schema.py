"""init schema

Revision ID: 89bd36e63679
Revises: 
Create Date: 2025-10-16 10:25:13.217680

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '89bd36e63679'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('slug', sa.String(length=160), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_brands'))
    )
    op.create_index(op.f('ix_brands_brands_name'), 'brands', ['name'], unique=True)
    op.create_index(op.f('ix_brands_brands_slug'), 'brands', ['slug'], unique=True)
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('slug', sa.String(length=160), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], name=op.f('fk_categories_parent_id_categories'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories'))
    )
    op.create_index(op.f('ix_categories_categories_name'), 'categories', ['name'], unique=True)
    op.create_index(op.f('ix_categories_categories_slug'), 'categories', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('admin', 'customer', name='user_role', native_enum=False), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_users_role'), 'users', ['role'], unique=False)
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('mobile_num', sa.String(length=20), nullable=False),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('detail_address', sa.String(length=500), nullable=False),
    sa.Column('province_code', sa.String(length=20), nullable=True),
    sa.Column('province_name', sa.String(length=100), nullable=True),
    sa.Column('district_code', sa.String(length=20), nullable=True),
    sa.Column('district_name', sa.String(length=100), nullable=True),
    sa.Column('ward_code', sa.String(length=20), nullable=True),
    sa.Column('ward_name', sa.String(length=100), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_addresses_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_addresses'))
    )
    op.create_index(op.f('ix_addresses_addresses_is_default'), 'addresses', ['is_default'], unique=False)
    op.create_index(op.f('ix_addresses_addresses_user_id'), 'addresses', ['user_id'], unique=False)
    op.create_index('uq_addresses_user_default', 'addresses', ['user_id'], unique=True, sqlite_where=sa.text('is_default = 1'), postgresql_where=sa.text('is_default = TRUE'))
    op.create_table('carts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('open', 'checked_out', 'abandoned', name='cart_status', native_enum=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_carts_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_carts'))
    )
    op.create_index(op.f('ix_carts_carts_status'), 'carts', ['status'], unique=False)
    op.create_index(op.f('ix_carts_carts_user_id'), 'carts', ['user_id'], unique=False)
    op.create_index('uq_cart_user_open', 'carts', ['user_id'], unique=True, sqlite_where=sa.text("status = 'open' AND deleted_at IS NULL"), postgresql_where=sa.text("status = 'open' AND deleted_at IS NULL"))
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_number', sa.String(length=30), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'paid', 'cancelled', 'fulfilled', 'refunded', name='order_status', native_enum=False), nullable=False),
    sa.Column('subtotal_cents', sa.Integer(), nullable=False),
    sa.Column('shipping_fee_cents', sa.Integer(), nullable=False),
    sa.Column('discount_cents', sa.Integer(), nullable=False),
    sa.Column('total_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('fulfilled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ship_full_name', sa.String(length=255), nullable=False),
    sa.Column('ship_mobile_num', sa.String(length=20), nullable=False),
    sa.Column('ship_detail_address', sa.String(length=500), nullable=False),
    sa.Column('ship_province_name', sa.String(length=100), nullable=True),
    sa.Column('ship_district_name', sa.String(length=100), nullable=True),
    sa.Column('ship_ward_name', sa.String(length=100), nullable=True),
    sa.Column('ship_zip_code', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('discount_cents >= 0', name=op.f('ck_orders_ck_order_discount_nonneg')),
    sa.CheckConstraint('shipping_fee_cents >= 0', name=op.f('ck_orders_ck_order_shipfee_nonneg')),
    sa.CheckConstraint('subtotal_cents >= 0', name=op.f('ck_orders_ck_order_subtotal_nonneg')),
    sa.CheckConstraint('total_cents >= 0', name=op.f('ck_orders_ck_order_total_nonneg')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_orders_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orders'))
    )
    op.create_index(op.f('ix_orders_orders_order_number'), 'orders', ['order_number'], unique=True)
    op.create_index(op.f('ix_orders_orders_status'), 'orders', ['status'], unique=False)
    op.create_index(op.f('ix_orders_orders_user_id'), 'orders', ['user_id'], unique=False)
    op.create_index('ix_orders_user_status_created', 'orders', ['user_id', 'status', 'created_at'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_price_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('base_price_cents >= 0', name=op.f('ck_products_ck_product_price_nonneg')),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name=op.f('fk_products_brand_id_brands'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products'))
    )
    op.create_index(op.f('ix_products_products_is_archived'), 'products', ['is_archived'], unique=False)
    op.create_index(op.f('ix_products_products_name'), 'products', ['name'], unique=False)
    op.create_index(op.f('ix_products_products_slug'), 'products', ['slug'], unique=True)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'paid', 'failed', 'refunded', 'voided', name='payment_status', native_enum=False), nullable=False),
    sa.Column('method', sa.Enum('cod', 'card', 'momo', 'zalopay', name='payment_method', native_enum=False), nullable=False),
    sa.Column('transaction_ref', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('amount_cents >= 0', name=op.f('ck_payments_ck_payment_amount_nonneg')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_payments_order_id_orders'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    op.create_index('ix_payments_order_created', 'payments', ['order_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_payments_payments_method'), 'payments', ['method'], unique=False)
    op.create_index(op.f('ix_payments_payments_order_id'), 'payments', ['order_id'], unique=False)
    op.create_index(op.f('ix_payments_payments_status'), 'payments', ['status'], unique=False)
    op.create_table('product_categories',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_product_categories_category_id_categories'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_categories_product_id_products'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id', 'category_id', name=op.f('pk_product_categories'))
    )
    op.create_table('product_images',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_images_product_id_products'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_images'))
    )
    op.create_index(op.f('ix_product_images_product_images_is_primary'), 'product_images', ['is_primary'], unique=False)
    op.create_index(op.f('ix_product_images_product_images_product_id'), 'product_images', ['product_id'], unique=False)
    op.create_table('product_variants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=False),
    sa.Column('color', sa.String(length=64), nullable=True),
    sa.Column('size', sa.String(length=32), nullable=True),
    sa.Column('stock_qty', sa.Integer(), nullable=False),
    sa.Column('price_cents', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('price_cents IS NULL OR price_cents >= 0', name=op.f('ck_product_variants_ck_variant_price_nonneg')),
    sa.CheckConstraint('stock_qty >= 0', name=op.f('ck_product_variants_ck_variant_stock_nonneg')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_variants_product_id_products'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_variants')),
    sa.UniqueConstraint('product_id', 'color', 'size', name='uq_variant_product_color_size')
    )
    op.create_index(op.f('ix_product_variants_product_variants_product_id'), 'product_variants', ['product_id'], unique=False)
    op.create_index(op.f('ix_product_variants_product_variants_sku'), 'product_variants', ['sku'], unique=True)
    op.create_table('return_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('requested', 'approved', 'rejected', 'received', 'refunded', 'closed', name='return_status', native_enum=False), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_return_requests_order_id_orders'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_return_requests'))
    )
    op.create_index(op.f('ix_return_requests_return_requests_order_id'), 'return_requests', ['order_id'], unique=False)
    op.create_index(op.f('ix_return_requests_return_requests_status'), 'return_requests', ['status'], unique=False)
    op.create_index('ix_returns_order_status_created', 'return_requests', ['order_id', 'status', 'created_at'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('rating BETWEEN 1 AND 5', name=op.f('ck_reviews_ck_review_rating_1_5')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_reviews_product_id_products'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_reviews_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reviews')),
    sa.UniqueConstraint('product_id', 'user_id', name='uq_review_user_once')
    )
    op.create_index('ix_reviews_product_created_at', 'reviews', ['product_id', 'created_at'], unique=False)
    op.create_index('ix_reviews_product_published', 'reviews', ['product_id', 'is_published'], unique=False)
    op.create_index(op.f('ix_reviews_reviews_product_id'), 'reviews', ['product_id'], unique=False)
    op.create_index(op.f('ix_reviews_reviews_user_id'), 'reviews', ['user_id'], unique=False)
    op.create_index('ix_reviews_user_created_at', 'reviews', ['user_id', 'created_at'], unique=False)
    op.create_table('shipments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('carrier', sa.String(length=120), nullable=True),
    sa.Column('tracking_number', sa.String(length=120), nullable=True),
    sa.Column('status', sa.Enum('pending', 'packed', 'in_transit', 'delivered', 'cancelled', name='shipment_status', native_enum=False), nullable=False),
    sa.Column('shipped_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('(shipped_at IS NULL) OR (delivered_at IS NULL) OR (delivered_at >= shipped_at)', name=op.f('ck_shipments_ck_shipment_delivered_after_shipped')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_shipments_order_id_orders'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipments')),
    sa.UniqueConstraint('carrier', 'tracking_number', name='uq_shipment_carrier_tracking'),
    sa.UniqueConstraint('order_id', name=op.f('uq_shipments_order_id'))
    )
    op.create_index('ix_shipments_order_status', 'shipments', ['order_id', 'status'], unique=False)
    op.create_index(op.f('ix_shipments_shipments_status'), 'shipments', ['status'], unique=False)
    op.create_index('ix_shipments_tracking', 'shipments', ['carrier', 'tracking_number'], unique=False)
    op.create_table('cart_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('unit_price_cents', sa.Integer(), nullable=False),
    sa.Column('line_total_cents', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('line_total_cents >= 0', name=op.f('ck_cart_items_ck_cartitem_line_total_nonneg')),
    sa.CheckConstraint('qty > 0', name=op.f('ck_cart_items_ck_cartitem_qty_pos')),
    sa.CheckConstraint('unit_price_cents >= 0', name=op.f('ck_cart_items_ck_cartitem_unit_price_nonneg')),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], name=op.f('fk_cart_items_cart_id_carts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variants.id'], name=op.f('fk_cart_items_variant_id_product_variants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cart_items')),
    sa.UniqueConstraint('cart_id', 'variant_id', name='uq_cartitem_cart_variant')
    )
    op.create_index('ix_cart_items_cart_created', 'cart_items', ['cart_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_cart_items_cart_items_cart_id'), 'cart_items', ['cart_id'], unique=False)
    op.create_index(op.f('ix_cart_items_cart_items_variant_id'), 'cart_items', ['variant_id'], unique=False)
    op.create_table('inventory_movements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('variant_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('qty_delta', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Enum('stock_in', 'reserve', 'unreserve', 'sold', 'return_in', 'cancel_adjust', 'manual_adjust', name='inventory_movement', native_enum=False), nullable=False),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('qty_delta <> 0', name=op.f('ck_inventory_movements_ck_inventory_qty_nonzero')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_inventory_movements_order_id_orders'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variants.id'], name=op.f('fk_inventory_movements_variant_id_product_variants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inventory_movements'))
    )
    op.create_index(op.f('ix_inventory_movements_inventory_movements_order_id'), 'inventory_movements', ['order_id'], unique=False)
    op.create_index(op.f('ix_inventory_movements_inventory_movements_reason'), 'inventory_movements', ['reason'], unique=False)
    op.create_index(op.f('ix_inventory_movements_inventory_movements_variant_id'), 'inventory_movements', ['variant_id'], unique=False)
    op.create_index('ix_inventory_variant_created', 'inventory_movements', ['variant_id', 'created_at'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('variant_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=False),
    sa.Column('color', sa.String(length=64), nullable=True),
    sa.Column('size', sa.String(length=32), nullable=True),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('unit_price_cents', sa.Integer(), nullable=False),
    sa.Column('line_total_cents', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('line_total_cents >= 0', name=op.f('ck_order_items_ck_orderitem_line_total_nonneg')),
    sa.CheckConstraint('qty > 0', name=op.f('ck_order_items_ck_orderitem_qty_pos')),
    sa.CheckConstraint('unit_price_cents >= 0', name=op.f('ck_order_items_ck_orderitem_unit_price_nonneg')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_order_items_order_id_orders'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_order_items_product_id_products'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variants.id'], name=op.f('fk_order_items_variant_id_product_variants'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_items'))
    )
    op.create_index('ix_order_items_order_created', 'order_items', ['order_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_order_items_order_items_order_id'), 'order_items', ['order_id'], unique=False)
    op.create_table('return_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('return_id', sa.Integer(), nullable=False),
    sa.Column('order_item_id', sa.Integer(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('qty > 0', name=op.f('ck_return_items_ck_return_qty_pos')),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_items.id'], name=op.f('fk_return_items_order_item_id_order_items'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['return_id'], ['return_requests.id'], name=op.f('fk_return_items_return_id_return_requests'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_return_items')),
    sa.UniqueConstraint('return_id', 'order_item_id', name='uq_returnitem_return_orderitem')
    )
    op.create_index('ix_return_items_orderitem', 'return_items', ['order_item_id'], unique=False)
    op.create_index('ix_return_items_return_created', 'return_items', ['return_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_return_items_return_items_return_id'), 'return_items', ['return_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_return_items_return_items_return_id'), table_name='return_items')
    op.drop_index('ix_return_items_return_created', table_name='return_items')
    op.drop_index('ix_return_items_orderitem', table_name='return_items')
    op.drop_table('return_items')
    op.drop_index(op.f('ix_order_items_order_items_order_id'), table_name='order_items')
    op.drop_index('ix_order_items_order_created', table_name='order_items')
    op.drop_table('order_items')
    op.drop_index('ix_inventory_variant_created', table_name='inventory_movements')
    op.drop_index(op.f('ix_inventory_movements_inventory_movements_variant_id'), table_name='inventory_movements')
    op.drop_index(op.f('ix_inventory_movements_inventory_movements_reason'), table_name='inventory_movements')
    op.drop_index(op.f('ix_inventory_movements_inventory_movements_order_id'), table_name='inventory_movements')
    op.drop_table('inventory_movements')
    op.drop_index(op.f('ix_cart_items_cart_items_variant_id'), table_name='cart_items')
    op.drop_index(op.f('ix_cart_items_cart_items_cart_id'), table_name='cart_items')
    op.drop_index('ix_cart_items_cart_created', table_name='cart_items')
    op.drop_table('cart_items')
    op.drop_index('ix_shipments_tracking', table_name='shipments')
    op.drop_index(op.f('ix_shipments_shipments_status'), table_name='shipments')
    op.drop_index('ix_shipments_order_status', table_name='shipments')
    op.drop_table('shipments')
    op.drop_index('ix_reviews_user_created_at', table_name='reviews')
    op.drop_index(op.f('ix_reviews_reviews_user_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_reviews_product_id'), table_name='reviews')
    op.drop_index('ix_reviews_product_published', table_name='reviews')
    op.drop_index('ix_reviews_product_created_at', table_name='reviews')
    op.drop_table('reviews')
    op.drop_index('ix_returns_order_status_created', table_name='return_requests')
    op.drop_index(op.f('ix_return_requests_return_requests_status'), table_name='return_requests')
    op.drop_index(op.f('ix_return_requests_return_requests_order_id'), table_name='return_requests')
    op.drop_table('return_requests')
    op.drop_index(op.f('ix_product_variants_product_variants_sku'), table_name='product_variants')
    op.drop_index(op.f('ix_product_variants_product_variants_product_id'), table_name='product_variants')
    op.drop_table('product_variants')
    op.drop_index(op.f('ix_product_images_product_images_product_id'), table_name='product_images')
    op.drop_index(op.f('ix_product_images_product_images_is_primary'), table_name='product_images')
    op.drop_table('product_images')
    op.drop_table('product_categories')
    op.drop_index(op.f('ix_payments_payments_status'), table_name='payments')
    op.drop_index(op.f('ix_payments_payments_order_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_payments_method'), table_name='payments')
    op.drop_index('ix_payments_order_created', table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_products_products_slug'), table_name='products')
    op.drop_index(op.f('ix_products_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_products_is_archived'), table_name='products')
    op.drop_table('products')
    op.drop_index('ix_orders_user_status_created', table_name='orders')
    op.drop_index(op.f('ix_orders_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_orders_status'), table_name='orders')
    op.drop_index(op.f('ix_orders_orders_order_number'), table_name='orders')
    op.drop_table('orders')
    op.drop_index('uq_cart_user_open', table_name='carts', sqlite_where=sa.text("status = 'open' AND deleted_at IS NULL"), postgresql_where=sa.text("status = 'open' AND deleted_at IS NULL"))
    op.drop_index(op.f('ix_carts_carts_user_id'), table_name='carts')
    op.drop_index(op.f('ix_carts_carts_status'), table_name='carts')
    op.drop_table('carts')
    op.drop_index('uq_addresses_user_default', table_name='addresses', sqlite_where=sa.text('is_default = 1'), postgresql_where=sa.text('is_default = TRUE'))
    op.drop_index(op.f('ix_addresses_addresses_user_id'), table_name='addresses')
    op.drop_index(op.f('ix_addresses_addresses_is_default'), table_name='addresses')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_users_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_categories_categories_slug'), table_name='categories')
    op.drop_index(op.f('ix_categories_categories_name'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_brands_brands_slug'), table_name='brands')
    op.drop_index(op.f('ix_brands_brands_name'), table_name='brands')
    op.drop_table('brands')
    # ### end Alembic commands ###
